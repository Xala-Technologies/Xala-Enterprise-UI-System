{
  "metadata": {
    "name": "Tabs",
    "version": "1.0.0",
    "category": "navigation",
    "description": "A fully accessible tabs component for organizing content into different sections",
    "designTokens": ["spacing", "typography", "colors", "borders", "shadows"],
    "platform": "web",
    "status": "stable"
  },
  "props": {
    "tabs": {
      "type": "array",
      "required": true,
      "description": "Array of tab objects defining the tabs and their content",
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "required": true,
            "description": "Unique identifier for the tab"
          },
          "label": {
            "type": "string",
            "required": true,
            "description": "Display label for the tab"
          },
          "content": {
            "type": "ReactNode",
            "required": true,
            "description": "Content to display when tab is active"
          },
          "disabled": {
            "type": "boolean",
            "default": false,
            "description": "Whether the tab is disabled"
          },
          "icon": {
            "type": "ReactNode",
            "required": false,
            "description": "Optional icon to display in the tab"
          }
        }
      },
      "examples": [
        [
          {
            "id": "tab1",
            "label": "Overview",
            "content": "<div>Overview content</div>"
          },
          {
            "id": "tab2",
            "label": "Details",
            "content": "<div>Details content</div>",
            "disabled": false
          }
        ]
      ]
    },
    "activeTab": {
      "type": "string",
      "required": false,
      "description": "Controlled active tab ID. Use for controlled component behavior",
      "examples": ["tab1", "overview"]
    },
    "defaultActiveTab": {
      "type": "string",
      "required": false,
      "description": "Default active tab ID for uncontrolled component behavior",
      "examples": ["tab1", "overview"]
    },
    "variant": {
      "type": "string",
      "enum": ["default", "underline", "pills", "enclosed"],
      "default": "default",
      "description": "Visual style variant of the tabs",
      "examples": ["default", "underline", "pills", "enclosed"]
    },
    "size": {
      "type": "string",
      "enum": ["sm", "md", "lg"],
      "default": "md",
      "description": "Size variant affecting padding and font size",
      "examples": ["sm", "md", "lg"]
    },
    "orientation": {
      "type": "string",
      "enum": ["horizontal", "vertical"],
      "default": "horizontal",
      "description": "Layout orientation of the tabs",
      "examples": ["horizontal", "vertical"]
    },
    "onChange": {
      "type": "function",
      "required": false,
      "description": "Callback fired when active tab changes",
      "signature": "(tabId: string) => void",
      "examples": ["(tabId) => console.log('Active tab:', tabId)"]
    },
    "className": {
      "type": "string",
      "required": false,
      "description": "Additional CSS classes for custom styling"
    },
    "ariaLabel": {
      "type": "string",
      "required": false,
      "description": "Accessible label for the tab list"
    },
    "ariaLabelledBy": {
      "type": "string",
      "required": false,
      "description": "ID of element that labels the tab list"
    }
  },
  "accessibility": {
    "wcagLevel": "AAA",
    "requirements": [
      {
        "criterion": "1.3.1",
        "level": "A",
        "description": "Info and Relationships - Uses proper tablist, tab, and tabpanel roles"
      },
      {
        "criterion": "1.4.3",
        "level": "AA",
        "description": "Contrast (Minimum) - 4.5:1 contrast ratio for text"
      },
      {
        "criterion": "1.4.6",
        "level": "AAA",
        "description": "Contrast (Enhanced) - 7:1 contrast ratio for normal text"
      },
      {
        "criterion": "2.1.1",
        "level": "A",
        "description": "Keyboard - Full keyboard navigation with arrow keys, Home, End"
      },
      {
        "criterion": "2.4.3",
        "level": "A",
        "description": "Focus Order - Logical tab sequence"
      },
      {
        "criterion": "2.4.7",
        "level": "AA",
        "description": "Focus Visible - Clear focus indicators"
      },
      {
        "criterion": "3.2.2",
        "level": "A",
        "description": "On Input - No unexpected context changes"
      },
      {
        "criterion": "4.1.2",
        "level": "A",
        "description": "Name, Role, Value - Proper ARIA attributes and state management"
      }
    ],
    "features": [
      "Screen reader compatible with proper ARIA roles and attributes",
      "Keyboard navigation with arrow keys, Home, and End keys",
      "Focus management with visible focus indicators",
      "High contrast support for visually impaired users",
      "Announces tab selection and content changes",
      "Supports aria-label and aria-labelledby for custom labeling",
      "Disabled tabs are properly excluded from keyboard navigation"
    ],
    "ariaRoles": {
      "tablist": "Container for tab buttons",
      "tab": "Individual tab button",
      "tabpanel": "Content panel associated with each tab"
    },
    "ariaAttributes": {
      "aria-label": "Labels the tab list when no visible label exists",
      "aria-labelledby": "References an element that labels the tab list",
      "aria-selected": "Indicates the selected state of each tab",
      "aria-controls": "Associates each tab with its corresponding panel",
      "aria-orientation": "Indicates horizontal or vertical orientation",
      "aria-disabled": "Indicates disabled state for unavailable tabs"
    },
    "keyboardSupport": {
      "ArrowLeft/ArrowUp": "Move to previous tab",
      "ArrowRight/ArrowDown": "Move to next tab",
      "Home": "Move to first tab",
      "End": "Move to last tab",
      "Tab": "Move focus out of tab list to content",
      "Enter/Space": "Activate focused tab"
    }
  },
  "compliance": {
    "norwegian": {
      "nsmClassification": "OPEN",
      "gdprCompliant": true,
      "wcagLevel": "AAA",
      "language": "nb-NO",
      "auditTrail": false
    }
  },
  "styling": {
    "variants": {
      "default": {
        "description": "Standard tabs with subtle background and border",
        "tokens": ["colors.neutral", "borders.width", "spacing.md"]
      },
      "underline": {
        "description": "Minimalist tabs with underline indicator",
        "tokens": ["colors.primary", "borders.width", "spacing.sm"]
      },
      "pills": {
        "description": "Rounded pill-shaped tabs",
        "tokens": ["colors.primary", "borders.radius.full", "spacing.md"]
      },
      "enclosed": {
        "description": "Tabs with full borders creating distinct sections",
        "tokens": ["colors.neutral", "borders.width", "borders.radius.md"]
      }
    },
    "sizes": {
      "sm": {
        "description": "Compact tabs for dense layouts",
        "tokens": ["spacing.xs", "typography.sm"]
      },
      "md": {
        "description": "Standard tabs for most use cases",
        "tokens": ["spacing.sm", "typography.base"]
      },
      "lg": {
        "description": "Large tabs for prominent navigation",
        "tokens": ["spacing.md", "typography.lg"]
      }
    },
    "states": {
      "default": "Inactive tab state",
      "active": "Currently selected tab",
      "hover": "Tab being hovered",
      "focus": "Tab receiving keyboard focus",
      "disabled": "Unavailable tab state"
    },
    "customization": {
      "cssVariables": [
        "--tabs-bg-color",
        "--tabs-text-color",
        "--tabs-border-color",
        "--tabs-active-bg-color",
        "--tabs-active-text-color",
        "--tabs-focus-ring-color"
      ],
      "tailwindClasses": {
        "base": "inline-flex items-center justify-center",
        "variants": {
          "default": "border-b-2 border-transparent hover:border-gray-300",
          "underline": "border-b-2 border-transparent hover:border-primary-300",
          "pills": "rounded-full hover:bg-primary-50",
          "enclosed": "border border-gray-300 rounded-t-md"
        }
      }
    }
  },
  "examples": [
    {
      "name": "basic",
      "title": "Basic Tabs",
      "description": "Simple tabs with text content",
      "code": {
        "tsx": "import { Tabs } from '@xala/ui-system';\n\nconst BasicTabs = () => {\n  const tabs = [\n    {\n      id: 'overview',\n      label: 'Overview',\n      content: <div className=\"p-4\">Overview content goes here</div>\n    },\n    {\n      id: 'details',\n      label: 'Details',\n      content: <div className=\"p-4\">Detailed information</div>\n    },\n    {\n      id: 'settings',\n      label: 'Settings',\n      content: <div className=\"p-4\">Settings panel</div>\n    }\n  ];\n\n  return (\n    <Tabs\n      tabs={tabs}\n      defaultActiveTab=\"overview\"\n      ariaLabel=\"Navigation tabs\"\n    />\n  );\n};",
        "props": {
          "tabs": [
            {
              "id": "overview",
              "label": "Overview",
              "content": "Overview content"
            },
            {
              "id": "details",
              "label": "Details",
              "content": "Detailed information"
            }
          ],
          "defaultActiveTab": "overview"
        }
      }
    },
    {
      "name": "withIcons",
      "title": "Tabs with Icons",
      "description": "Tabs including icons for better visual hierarchy",
      "code": {
        "tsx": "import { Tabs } from '@xala/ui-system';\nimport { HomeIcon, CogIcon, UserIcon } from '@heroicons/react/24/outline';\n\nconst IconTabs = () => {\n  const tabs = [\n    {\n      id: 'home',\n      label: 'Home',\n      icon: <HomeIcon className=\"w-4 h-4\" />,\n      content: <div className=\"p-4\">Home dashboard content</div>\n    },\n    {\n      id: 'profile',\n      label: 'Profile',\n      icon: <UserIcon className=\"w-4 h-4\" />,\n      content: <div className=\"p-4\">User profile settings</div>\n    },\n    {\n      id: 'settings',\n      label: 'Settings',\n      icon: <CogIcon className=\"w-4 h-4\" />,\n      content: <div className=\"p-4\">Application settings</div>,\n      disabled: false\n    }\n  ];\n\n  return (\n    <Tabs\n      tabs={tabs}\n      variant=\"pills\"\n      size=\"md\"\n      defaultActiveTab=\"home\"\n      ariaLabel=\"Application navigation\"\n    />\n  );\n};",
        "props": {
          "tabs": [
            {
              "id": "home",
              "label": "Home",
              "icon": "HomeIcon",
              "content": "Home content"
            }
          ],
          "variant": "pills",
          "size": "md"
        }
      }
    },
    {
      "name": "vertical",
      "title": "Vertical Tabs",
      "description": "Vertically oriented tabs for sidebar navigation",
      "code": {
        "tsx": "import { Tabs } from '@xala/ui-system';\n\nconst VerticalTabs = () => {\n  const tabs = [\n    {\n      id: 'account',\n      label: 'Account Settings',\n      content: (\n        <div className=\"p-6\">\n          <h2 className=\"text-lg font-semibold mb-4\">Account Settings</h2>\n          <p>Manage your account preferences and security settings.</p>\n        </div>\n      )\n    },\n    {\n      id: 'billing',\n      label: 'Billing & Plans',\n      content: (\n        <div className=\"p-6\">\n          <h2 className=\"text-lg font-semibold mb-4\">Billing & Plans</h2>\n          <p>View your current plan and billing information.</p>\n        </div>\n      )\n    },\n    {\n      id: 'notifications',\n      label: 'Notifications',\n      content: (\n        <div className=\"p-6\">\n          <h2 className=\"text-lg font-semibold mb-4\">Notifications</h2>\n          <p>Configure your notification preferences.</p>\n        </div>\n      )\n    },\n    {\n      id: 'privacy',\n      label: 'Privacy & Security',\n      content: (\n        <div className=\"p-6\">\n          <h2 className=\"text-lg font-semibold mb-4\">Privacy & Security</h2>\n          <p>Manage your privacy settings and security options.</p>\n        </div>\n      ),\n      disabled: false\n    }\n  ];\n\n  return (\n    <div className=\"flex h-96\">\n      <Tabs\n        tabs={tabs}\n        orientation=\"vertical\"\n        variant=\"enclosed\"\n        size=\"lg\"\n        defaultActiveTab=\"account\"\n        ariaLabel=\"Settings navigation\"\n        className=\"w-full\"\n      />\n    </div>\n  );\n};",
        "props": {
          "tabs": [
            {
              "id": "account",
              "label": "Account Settings",
              "content": "Account settings content"
            }
          ],
          "orientation": "vertical",
          "variant": "enclosed",
          "size": "lg"
        }
      }
    }
  ],
  "performance": {
    "bundleSize": "3.8KB",
    "renderTime": "<16ms",
    "memoryUsage": "~2MB",
    "optimizations": [
      "Lazy loading of tab content",
      "Memoized tab rendering",
      "Event handler optimization",
      "Minimal DOM manipulation"
    ],
    "benchmarks": {
      "initialRender": "<16ms",
      "tabSwitch": "<8ms",
      "keyboardNavigation": "<4ms",
      "memoryFootprint": "~2MB for 10 tabs"
    }
  },
  "testing": {
    "coverage": "95%",
    "scenarios": [
      {
        "name": "renders with required props",
        "type": "unit",
        "description": "Verifies component renders with minimum required props"
      },
      {
        "name": "handles tab switching",
        "type": "interaction",
        "description": "Tests clicking between tabs updates active state"
      },
      {
        "name": "keyboard navigation",
        "type": "accessibility",
        "description": "Verifies arrow key navigation and focus management"
      },
      {
        "name": "disabled tabs",
        "type": "functional",
        "description": "Ensures disabled tabs cannot be activated"
      },
      {
        "name": "controlled vs uncontrolled",
        "type": "functional",
        "description": "Tests both controlled and uncontrolled usage patterns"
      },
      {
        "name": "vertical orientation",
        "type": "visual",
        "description": "Validates vertical layout and navigation"
      },
      {
        "name": "ARIA compliance",
        "type": "accessibility",
        "description": "Validates proper ARIA roles and attributes"
      },
      {
        "name": "Norwegian compliance",
        "type": "compliance",
        "description": "Ensures NSM and WCAG AAA compliance"
      }
    ]
  },
  "dependencies": {
    "peer": ["react", "react-dom"],
    "internal": ["@xala/design-tokens", "@xala/accessibility"],
    "external": []
  },
  "exports": {
    "component": "Tabs",
    "types": ["TabsProps", "TabItem", "TabVariant", "TabSize", "TabOrientation"],
    "hooks": ["useTabNavigation", "useTabState"]
  }
}
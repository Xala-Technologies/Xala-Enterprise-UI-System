<template>
  <button
    :class="buttonClasses"
    v-bind="$attrs"
    @click="$emit('click', $event)"
  >
    <slot />
  </button>
</template>

<script setup lang="ts">
import { computed } from 'vue';
import { cva, type VariantProps } from 'class-variance-authority';

const buttonVariants = cva(
  [
    'inline-flex',
    'items-center',
    'justify-center',
    'whitespace-nowrap',
    'rounded-md',
    'text-sm',
    'font-medium',
    'transition-colors',
    'focus-visible:outline-none',
    'focus-visible:ring-2',
    'focus-visible:ring-ring',
    'focus-visible:ring-offset-2',
    'disabled:pointer-events-none',
    'disabled:opacity-50',
  ],
  {
    variants: {
      variant: {
        primary: [
          'bg-primary',
          'text-primary-foreground',
          'hover:bg-primary/90',
        ],
        secondary: [
          'bg-secondary',
          'text-secondary-foreground',
          'hover:bg-secondary/80',
        ],
        destructive: [
          'bg-destructive',
          'text-destructive-foreground',
          'hover:bg-destructive/90',
        ],
        outline: [
          'border',
          'border-input',
          'bg-background',
          'hover:bg-accent',
          'hover:text-accent-foreground',
        ],
        ghost: [
          'hover:bg-accent',
          'hover:text-accent-foreground',
        ],
        link: [
          'text-primary',
          'underline-offset-4',
          'hover:underline',
        ],
      },
      size: {
        sm: ['h-9', 'px-3'],
        md: ['h-10', 'px-4', 'py-2'],
        lg: ['h-11', 'px-8'],
        xl: ['h-12', 'px-10'],
        icon: ['h-10', 'w-10'],
      },
    },
    defaultVariants: {
      variant: 'primary',
      size: 'md',
    },
  }
);

export interface ButtonProps extends VariantProps<typeof buttonVariants> {
  readonly class?: string;
}

const props = withDefaults(defineProps<ButtonProps>(), {
  variant: 'primary',
  size: 'md',
});

defineEmits<{
  click: [event: MouseEvent];
}>();

const buttonClasses = computed(() => 
  buttonVariants({ 
    variant: props.variant, 
    size: props.size, 
    class: props.class 
  })
);
</script>
import { Component, Input, Output, EventEmitter } from '@angular/core';
import { ButtonComponent, CardComponent } from '@xala-technologies/ui-system';

export interface {{pascalCase name}}Props {
  {{#each props}}
  readonly {{name}}{{#if optional}}?{{/if}}: {{type}};
  {{/each}}
}

@Component({
  selector: 'app-{{kebabCase name}}',
  standalone: true,
  imports: [ButtonComponent, CardComponent],
  template: `
    <xala-card class="w-full max-w-md">
      <div class="p-6 space-y-4">
        <div class="space-y-2">
          <h3 class="text-xl font-semibold">{{pascalCase name}}</h3>
          <p class="text-muted-foreground">
            {{#if description}}{{description}}{{else}}A {{name}} component built with Xala UI System{{/if}}
          </p>
        </div>
        
        <xala-button 
          *ngIf="isInteractive"
          variant="primary" 
          size="md"
          {{#each props}}
          {{#if (eq type '() => void')}}
          (click)="on{{pascalCase name}}()"
          {{/if}}
          {{/each}}
        >
          {{#each props}}
          {{#if (eq name 'title')}}
          {{ {{name}} || 'Click me' }}
          {{/if}}
          {{/each}}
        </xala-button>
        
        {{#each props}}
        {{#if (eq name 'children')}}
        <div class="prose prose-sm">
          <ng-content></ng-content>
        </div>
        {{/if}}
        {{/each}}
      </div>
    </xala-card>
  `,
})
export class {{pascalCase name}}Component implements {{pascalCase name}}Props {
  {{#each props}}
  @Input() {{name}}{{#if optional}}?{{/if}}: {{type}};
  {{/each}}
  
  {{#each props}}
  {{#if (eq type '() => void')}}
  @Output() {{name}}Event = new EventEmitter<void>();
  {{/if}}
  {{/each}}

  get isInteractive(): boolean {
    return {{#if_contains features 'interactive'}}true{{else}}false{{/if_contains}};
  }

  {{#each props}}
  {{#if (eq type '() => void')}}
  on{{pascalCase name}}(): void {
    this.{{name}}Event.emit();
    if (this.{{name}}) {
      this.{{name}}();
    }
  }
  {{/if}}
  {{/each}}
}